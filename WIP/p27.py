prime=[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947]
def isPrime(p):
    if p in prime: return 1
    elif p>abs(prime[-1]):
        for i in xrange(abs(prime[-1]), p+1):
            t=1
            for f in prime:
                if f>0 and i%f==0: t=0; break
            if t==1: prime.append(i)
        if p not in prime: prime.append(-p)
        else: return 1
    return 0

def f():
    isPrime(10000)
    ris=[40, [1, 41]]
    for a in xrange(-999,1000):
        for b1 in prime:
            if b1<1000 & b1>0:
                print b1
                b=b1
                n=0
                while n**2+a*n+b in prime: n+=1
                n1=n
                b=-b1
                n=0
                while n**2+a*n+b in prime: n+=1
                n2=n
                if n1>ris[0]: ris[0]=n1, ris[1]=[a, b1]
                if n2>ris[0]: ris[0]=n2, ris[1]=[a, -b1]            
    return ris

ris=f()
print ris
print ris[1][0]*ris[1][1]
